{"version":3,"sources":["../src/transformers/basePathTransformer.ts"],"names":[],"mappings":";AAAA;;4DAE4D;;;;;;;;;;AAM5D;;GAEG;AACH;IACW,MAAM,CAAC,IAAwB;QAClC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAEM,MAAM,CAAC,IAAwB;QAClC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAEM,cAAc,CAAC,MAA4B;QAC9C,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEM,kBAAkB;IACzB,CAAC;IAEM,YAAY,CAAC,UAAkB;QAClC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC;IAEM,kBAAkB,CAAC,EAA4B,EAAE,UAAkB;QACtE,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC;IACtE,CAAC;IAEM,kBAAkB,CAAC,QAAiC;IAC3D,CAAC;IAEY,SAAS,CAAC,MAA4B;;QACnD,CAAC;KAAA;IAEM,2BAA2B,CAAC,UAAkB;QACjD,MAAM,CAAC,UAAU,CAAC;IACtB,CAAC;IAEM,2BAA2B,CAAC,UAAkB;QACjD,MAAM,CAAC,UAAU,CAAC;IACtB,CAAC;CACJ;AArCD,kDAqCC","file":"basePathTransformer.js","sourcesContent":["/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n\nimport { DebugProtocol } from 'vscode-debugprotocol';\n\nimport { ILaunchRequestArgs, IAttachRequestArgs, IStackTraceResponseBody } from '../debugAdapterInterfaces';\n\n/**\n * Converts a local path from Code to a path on the target.\n */\nexport class BasePathTransformer {\n    public launch(args: ILaunchRequestArgs): Promise<void> {\n        return Promise.resolve();\n    }\n\n    public attach(args: IAttachRequestArgs): Promise<void> {\n        return Promise.resolve();\n    }\n\n    public setBreakpoints(source: DebugProtocol.Source): DebugProtocol.Source {\n        return source;\n    }\n\n    public clearTargetContext(): void {\n    }\n\n    public scriptParsed(scriptPath: string): Promise<string> {\n        return Promise.resolve(scriptPath);\n    }\n\n    public breakpointResolved(bp: DebugProtocol.Breakpoint, targetPath: string): string {\n        return this.getClientPathFromTargetPath(targetPath) || targetPath;\n    }\n\n    public stackTraceResponse(response: IStackTraceResponseBody): void {\n    }\n\n    public async fixSource(source: DebugProtocol.Source): Promise<void> {\n    }\n\n    public getTargetPathFromClientPath(clientPath: string): string {\n        return clientPath;\n    }\n\n    public getClientPathFromTargetPath(targetPath: string): string {\n        return targetPath;\n    }\n}\n"],"sourceRoot":"../.."}