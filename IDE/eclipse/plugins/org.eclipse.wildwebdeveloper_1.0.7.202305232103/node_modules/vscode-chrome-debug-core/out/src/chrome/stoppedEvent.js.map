{"version":3,"sources":["../src/chrome/stoppedEvent.ts"],"names":[],"mappings":";AAAA;;4DAE4D;;AAG5D,6DAAmD;AAGnD,kCAAkC;AAElC,kCAAkC;AAClC,MAAM,QAAQ,GAAG,GAAG,CAAC,iBAAiB,YAAE,CAAC;AAIzC,mBAA2B,SAAQ,kCAAY;IAC3C,YAAY,MAAkB,EAAE,QAAgB,EAAE,SAAqC;QACnF,MAAM,aAAa,GAAG,SAAS,IAAI,SAAS,CAAC,WAAW,IAAI,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QACnG,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;QAEvC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACb,KAAK,MAAM;gBACsB,IAAK,CAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAyB,EAAE,IAAgB,CAAC,CAAC;gBAC5G,KAAK,CAAC;YACV,KAAK,YAAY;gBACgB,IAAK,CAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAA+B,EAAE,IAAsB,CAAC,CAAC;gBACxH,KAAK,CAAC;YACV,KAAK,WAAW;gBACZ,MAAM,QAAQ,GAAG,SAAS,IAAU,SAAU,CAAC,QAAQ,CAAC,CAAC,yBAAyB;gBAClF,EAAE,CAAC,CAAC,OAAO,QAAQ,KAAK,WAAW,CAAC,CAAC,CAAC;oBACL,IAAK,CAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAA8B,EAAE,IAAqB,CAAC,CAAC;gBAC1H,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACW,IAAK,CAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAsC,EAAE,IAA8B,CAAC,CAAC;gBAC3I,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACyB,IAAK,CAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAoC,EAAE,IAA4B,CAAC,CAAC;gBACvI,CAAC;gBACD,KAAK,CAAC;YACV,KAAK,OAAO;gBACqB,IAAK,CAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAiC,EAAE,IAAwB,CAAC,CAAC;gBAC5H,KAAK,CAAC;YACV,KAAK,OAAO;gBACqB,IAAK,CAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAA0B,EAAE,IAAiB,CAAC,CAAC;gBAC9G,KAAK,CAAC;YACV,KAAK,oBAAoB;gBACQ,IAAK,CAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAuC,EAAE,IAA8B,CAAC,CAAC;gBACxI,KAAK,CAAC;YACV,KAAK,aAAa;gBACe,IAAK,CAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAA4B,EAAE,IAAuB,CAAC,CAAC;gBACtH,KAAK,CAAC;YACV,KAAK,mBAAmB;gBACS,IAAK,CAAC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAqC,EAAE,IAA6B,CAAC,CAAC;gBACrI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;gBAC/B,KAAK,CAAC;YACV;gBACiC,IAAK,CAAC,IAAI,CAAC,WAAW,GAAG,sBAAsB,CAAC;gBAC7E,KAAK,CAAC;QACd,CAAC;IACL,CAAC;CACJ;AA3CD,sCA2CC","file":"stoppedEvent.js","sourceRoot":"../..","sourcesContent":["/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n\nimport { DebugProtocol } from 'vscode-debugprotocol';\nimport { StoppedEvent } from 'vscode-debugadapter';\n\nimport { Protocol as Crdp } from 'devtools-protocol';\nimport * as utils from '../utils';\n\nimport * as nls from 'vscode-nls';\nconst localize = nls.loadMessageBundle();\n\nexport type ReasonType = 'step' | 'breakpoint' | 'exception' | 'pause' | 'entry' | 'debugger_statement' | 'frame_entry' | 'promise_rejection';\n\nexport class StoppedEvent2 extends StoppedEvent {\n    constructor(reason: ReasonType, threadId: number, exception?: Crdp.Runtime.RemoteObject) {\n        const exceptionText = exception && exception.description && utils.firstLine(exception.description);\n        super(reason, threadId, exceptionText);\n\n        switch (reason) {\n            case 'step':\n                (<DebugProtocol.StoppedEvent>this).body.description = localize('reason.description.step', 'Paused on step');\n                break;\n            case 'breakpoint':\n                (<DebugProtocol.StoppedEvent>this).body.description = localize('reason.description.breakpoint', 'Paused on breakpoint');\n                break;\n            case 'exception':\n                const uncaught = exception && (<any>exception).uncaught; // Currently undocumented\n                if (typeof uncaught === 'undefined') {\n                    (<DebugProtocol.StoppedEvent>this).body.description = localize('reason.description.exception', 'Paused on exception');\n                } else if (uncaught) {\n                    (<DebugProtocol.StoppedEvent>this).body.description = localize('reason.description.uncaughtException', 'Paused on uncaught exception');\n                } else {\n                    (<DebugProtocol.StoppedEvent>this).body.description = localize('reason.description.caughtException', 'Paused on caught exception');\n                }\n                break;\n            case 'pause':\n                (<DebugProtocol.StoppedEvent>this).body.description = localize('reason.description.user_request', 'Paused on user request');\n                break;\n            case 'entry':\n                (<DebugProtocol.StoppedEvent>this).body.description = localize('reason.description.entry', 'Paused on entry');\n                break;\n            case 'debugger_statement':\n                (<DebugProtocol.StoppedEvent>this).body.description = localize('reason.description.debugger_statement', 'Paused on debugger statement');\n                break;\n            case 'frame_entry':\n                (<DebugProtocol.StoppedEvent>this).body.description = localize('reason.description.restart', 'Paused on frame entry');\n                break;\n            case 'promise_rejection':\n                (<DebugProtocol.StoppedEvent>this).body.description = localize('reason.description.promiseRejection', 'Paused on promise rejection');\n                this.body.reason = 'exception';\n                break;\n            default:\n                (<DebugProtocol.StoppedEvent>this).body.description = 'Unknown pause reason';\n                break;\n        }\n    }\n}\n"]}