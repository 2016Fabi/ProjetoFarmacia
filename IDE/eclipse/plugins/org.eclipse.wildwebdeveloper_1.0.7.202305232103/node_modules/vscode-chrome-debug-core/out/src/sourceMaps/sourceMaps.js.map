{"version":3,"sources":["../src/sourceMaps/sourceMaps.ts"],"names":[],"mappings":"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","file":"sourceMaps.js","sourcesContent":["/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n\nimport { SourceMap, MappedPosition, ISourcePathDetails } from './sourceMap';\nimport { SourceMapFactory } from './sourceMapFactory';\nimport { ISourceMapPathOverrides, IPathMapping } from '../debugAdapterInterfaces';\n\nexport class SourceMaps {\n    // Maps absolute paths to generated/authored source files to their corresponding SourceMap object\n    private _generatedPathToSourceMap = new Map<string, SourceMap>();\n    private _authoredPathToSourceMap = new Map<string, SourceMap>();\n\n    private _sourceMapFactory: SourceMapFactory;\n\n    public constructor(pathMapping?: IPathMapping, sourceMapPathOverrides?: ISourceMapPathOverrides, enableSourceMapCaching?: boolean) {\n        this._sourceMapFactory = new SourceMapFactory(pathMapping, sourceMapPathOverrides, enableSourceMapCaching);\n    }\n\n    /**\n     * Returns the generated script path for an authored source path\n     * @param pathToSource - The absolute path to the authored file\n     */\n    public getGeneratedPathFromAuthoredPath(authoredPath: string): string {\n        authoredPath = authoredPath.toLowerCase();\n        return this._authoredPathToSourceMap.has(authoredPath) ?\n            this._authoredPathToSourceMap.get(authoredPath).generatedPath() :\n            null;\n    }\n\n    public mapToGenerated(authoredPath: string, line: number, column: number): MappedPosition {\n        authoredPath = authoredPath.toLowerCase();\n        return this._authoredPathToSourceMap.has(authoredPath) ?\n            this._authoredPathToSourceMap.get(authoredPath)\n                .generatedPositionFor(authoredPath, line, column) :\n            null;\n    }\n\n    public mapToAuthored(pathToGenerated: string, line: number, column: number): MappedPosition {\n        pathToGenerated = pathToGenerated.toLowerCase();\n        return this._generatedPathToSourceMap.has(pathToGenerated) ?\n            this._generatedPathToSourceMap.get(pathToGenerated)\n                .authoredPositionFor(line, column) :\n            null;\n    }\n\n    public allMappedSources(pathToGenerated: string): string[] {\n        pathToGenerated = pathToGenerated.toLowerCase();\n        return this._generatedPathToSourceMap.has(pathToGenerated) ?\n            this._generatedPathToSourceMap.get(pathToGenerated).authoredSources :\n            null;\n    }\n\n    public allSourcePathDetails(pathToGenerated: string): ISourcePathDetails[] {\n        pathToGenerated = pathToGenerated.toLowerCase();\n        return this._generatedPathToSourceMap.has(pathToGenerated) ?\n            this._generatedPathToSourceMap.get(pathToGenerated).allSourcePathDetails :\n            null;\n    }\n\n    public sourceContentFor(authoredPath: string): string {\n        authoredPath = authoredPath.toLowerCase();\n        return this._authoredPathToSourceMap.has(authoredPath) ?\n            this._authoredPathToSourceMap.get(authoredPath)\n                .sourceContentFor(authoredPath) :\n            null;\n    }\n\n    /**\n     * Given a new path to a new script file, finds and loads the sourcemap for that file\n     */\n    public async processNewSourceMap(pathToGenerated: string, originalUrlToGenerated: string | undefined, sourceMapURL: string, isVSClient = false): Promise<void> {\n        const sourceMap = await this._sourceMapFactory.getMapForGeneratedPath(pathToGenerated, originalUrlToGenerated, sourceMapURL, isVSClient);\n        if (sourceMap) {\n            this._generatedPathToSourceMap.set(pathToGenerated.toLowerCase(), sourceMap);\n            sourceMap.authoredSources.forEach(authoredSource => this._authoredPathToSourceMap.set(authoredSource.toLowerCase(), sourceMap));\n        }\n    }\n}\n"],"sourceRoot":"../.."}