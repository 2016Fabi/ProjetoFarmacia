{"version":3,"sources":["../src/remoteMapper.ts"],"names":[],"mappings":";AAAA;;2DAE2D;;AAG3D,6DAA6C;AAC7C,2CAAiC;AACjC,6BAA6B;AAE7B,MAAM,eAAe,GAAG,eAAe,CAAC;AACxC,MAAM,mBAAmB,GAAG,uBAAuB,CAAC;AAEpD,MAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC;AAC/C,mBAAmB,GAAQ;IACvB,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IAC1B,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;QAC7C,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,yFAAyF;QACtH,MAAM,CAAC;AACf,CAAC;AAED,uCAA8C,SAAiB;IAC3D,EAAE,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAM,GAAG,GAAG,gBAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACjC,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QAC/B,MAAM,gBAAgB,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACrD,IAAI,YAAoB,CAAC;QACzB,EAAE,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACrB,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,mBAAmB,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAChG,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,mBAAmB,EAAE,OAAO,CAAC,CAAC;QACtE,CAAC;QAED,4BAAM,CAAC,GAAG,CAAC,oCAAoC,SAAS,sBAAsB,YAAY,EAAE,CAAC,CAAC;QAC9F,MAAM,CAAC,YAAY,CAAC;IACxB,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;AACL,CAAC;AAjBD,sEAiBC;AAED,yCAAgD,MAA4B,EAAE,eAAmC;IAC7G,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,IAAI,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC;QAChF,MAAM,SAAS,GAAG,gBAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,mBAAmB,GAAG,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC;aAC7F,IAAI,CAAC;YACF,MAAM,EAAE,eAAe;YACvB,SAAS,EAAE,eAAe;SAC7B,CAAC,CAAC;QAEP,MAAM,mBACC,MAAM,IACT,IAAI,EAAE,SAAS,CAAC,QAAQ,EAAE,EAC1B,MAAM,EAAE,SAAS,EACjB,eAAe,EAAE,SAAS,IAC5B;IACN,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;AACL,CAAC;AAjBD,0EAiBC;AAED,8BAAqC,IAAY;IAC7C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,oBAAoB,GAAG,mBAAmB,CAAC,CAAC,CAAC;AAC9H,CAAC;AAFD,oDAEC","file":"remoteMapper.js","sourcesContent":["/*---------------------------------------------------------\n* Copyright (C) Microsoft Corporation. All rights reserved.\n*--------------------------------------------------------*/\n\nimport { DebugProtocol } from 'vscode-debugprotocol';\nimport { logger } from 'vscode-debugadapter';\nimport { URI } from 'vscode-uri';\nimport * as path from 'path';\n\nconst remoteUriScheme = 'vscode-remote';\nconst remotePathComponent = '__vscode-remote-uri__';\n\nconst isWindows = process.platform === 'win32';\nfunction getFsPath(uri: URI): string {\n    const fsPath = uri.fsPath;\n    return isWindows && !fsPath.match(/^[a-zA-Z]:/) ?\n        fsPath.replace(/\\\\/g, '/') : // Hack - undo the slash normalization that URI does when windows is the current platform\n        fsPath;\n}\n\nexport function mapRemoteClientToInternalPath(remoteUri: string): string {\n    if (remoteUri.startsWith(remoteUriScheme + ':')) {\n        const uri = URI.parse(remoteUri);\n        const uriPath = getFsPath(uri);\n        const driveLetterMatch = uriPath.match(/^[A-Za-z]:/);\n        let internalPath: string;\n        if (!!driveLetterMatch) {\n            internalPath = path.win32.join(driveLetterMatch[0], remotePathComponent, uriPath.substr(2));\n        } else {\n            internalPath = path.posix.join('/', remotePathComponent, uriPath);\n        }\n\n        logger.log(`remoteMapper: mapping remote uri ${remoteUri} to internal path: ${internalPath}`);\n        return internalPath;\n    } else {\n        return remoteUri;\n    }\n}\n\nexport function mapInternalSourceToRemoteClient(source: DebugProtocol.Source, remoteAuthority: string | undefined): DebugProtocol.Source {\n    if (source && source.path && isInternalRemotePath(source.path) && remoteAuthority) {\n        const remoteUri = URI.file(source.path.replace(new RegExp(remotePathComponent + '[\\\\/\\\\\\\\]'), ''))\n            .with({\n                scheme: remoteUriScheme,\n                authority: remoteAuthority\n            });\n\n        return {\n            ...source,\n            path: remoteUri.toString(),\n            origin: undefined,\n            sourceReference: undefined\n        };\n    } else {\n        return source;\n    }\n}\n\nexport function isInternalRemotePath(path: string): boolean {\n    return path.startsWith('/' + remotePathComponent) || !!path.match(new RegExp('[a-zA-Z]:[\\\\/\\\\\\\\]' + remotePathComponent));\n}\n"],"sourceRoot":".."}