{"version":3,"sources":["../src/chrome/variables.ts"],"names":[],"mappings":"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","file":"variables.js","sourcesContent":["/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n\nimport { DebugProtocol } from 'vscode-debugprotocol';\nimport { Handles } from 'vscode-debugadapter';\n\nimport { VariableContext } from './chromeDebugAdapter';\n\nimport { Protocol as Crdp } from 'devtools-protocol';\nimport * as utils from '../utils';\nimport { VariablesManager } from './variablesManager';\nimport * as ChromeUtils from './chromeUtils';\n\nexport interface IVariableContainer {\n    expand(variablesManager: VariablesManager, filter?: string, start?: number, count?: number): Promise<DebugProtocol.Variable[]>;\n    setValue(variablesManager: VariablesManager, name: string, value: string): Promise<string>;\n}\n\nexport abstract class BaseVariableContainer implements IVariableContainer {\n    constructor(protected objectId: string, protected evaluateName?: string) {\n    }\n\n    public expand(variablesManager: VariablesManager, filter?: string, start?: number, count?: number): Promise<DebugProtocol.Variable[]> {\n        return variablesManager.getVariablesForObjectId(this.objectId, this.evaluateName, filter, start, count);\n    }\n\n    public setValue(variablesManager: VariablesManager, name: string, value: string): Promise<string> {\n        return utils.errP('setValue not supported by this variable type');\n    }\n}\n\nexport class PropertyContainer extends BaseVariableContainer {\n    public setValue(variablesManager: VariablesManager, name: string, value: string): Promise<string> {\n        return variablesManager.setPropertyValue(this.objectId, name, value);\n    }\n}\n\nexport class LoggedObjects extends BaseVariableContainer {\n    constructor(private args: Crdp.Runtime.RemoteObject[]) {\n        super(undefined);\n    }\n\n    public expand(variablesManager: VariablesManager, filter?: string, start?: number, count?: number): Promise<DebugProtocol.Variable[]> {\n        return Promise.all(this.args.map((arg, i) => variablesManager.remoteObjectToVariable('' + i, arg, undefined, /*stringify=*/false, 'repl')));\n    }\n}\n\nexport class ScopeContainer extends BaseVariableContainer {\n    private _thisObj: Crdp.Runtime.RemoteObject;\n    private _returnValue: Crdp.Runtime.RemoteObject;\n    private _frameId: string;\n    private _origScopeIndex: number;\n\n    public constructor(frameId: string, origScopeIndex: number, objectId: string, thisObj?: Crdp.Runtime.RemoteObject, returnValue?: Crdp.Runtime.RemoteObject) {\n        super(objectId, '');\n        this._thisObj = thisObj;\n        this._returnValue = returnValue;\n        this._frameId = frameId;\n        this._origScopeIndex = origScopeIndex;\n    }\n\n    /**\n     * Call super then insert the 'this' object if needed\n     */\n    public expand(variablesManager: VariablesManager, filter?: string, start?: number, count?: number): Promise<DebugProtocol.Variable[]> {\n        // No filtering in scopes right now\n        return super.expand(variablesManager, 'all', start, count).then(variables => {\n            if (this._thisObj) {\n                // If this is a scope that should have the 'this', prop, insert it at the top of the list\n                return this.insertRemoteObject(variablesManager, variables, 'this', this._thisObj);\n            }\n\n            return variables;\n        }).then(variables => {\n            if (this._returnValue) {\n                return this.insertRemoteObject(variablesManager, variables, 'Return value', this._returnValue);\n            }\n\n            return variables;\n        });\n    }\n\n    public setValue(variablesManager: VariablesManager, name: string, value: string): Promise<string> {\n        return variablesManager.setVariableValue(this._frameId, this._origScopeIndex, name, value);\n    }\n\n    private insertRemoteObject(variablesManager: VariablesManager, variables: DebugProtocol.Variable[], name: string, obj: Crdp.Runtime.RemoteObject): Promise<DebugProtocol.Variable[]> {\n        return variablesManager.remoteObjectToVariable(name, obj).then(variable => {\n            variables.unshift(variable);\n            return variables;\n        });\n    }\n}\n\nexport class ExceptionContainer extends PropertyContainer {\n    protected _exception: Crdp.Runtime.RemoteObject;\n\n    protected constructor(objectId: string, exception: Crdp.Runtime.RemoteObject) {\n        super(exception.objectId, undefined);\n        this._exception = exception;\n    }\n\n    /**\n     * Expand the exception as if it were a Scope\n     */\n    public static create(exception: Crdp.Runtime.RemoteObject): ExceptionContainer {\n        return exception.objectId ?\n            new ExceptionContainer(exception.objectId, exception) :\n            new ExceptionValueContainer(exception);\n    }\n}\n\n/**\n * For when a value is thrown instead of an object\n */\nexport class ExceptionValueContainer extends ExceptionContainer {\n    public constructor(exception: Crdp.Runtime.RemoteObject) {\n        super('EXCEPTION_ID', exception);\n    }\n\n    /**\n     * Make up a fake 'Exception' property to hold the thrown value, displayed under the Exception Scope\n     */\n    public expand(variablesManager: VariablesManager, filter?: string, start?: number, count?: number): Promise<DebugProtocol.Variable[]> {\n        const excValuePropDescriptor: Crdp.Runtime.PropertyDescriptor = <any>{ name: 'Exception', value: this._exception };\n        return variablesManager.propertyDescriptorToVariable(excValuePropDescriptor)\n            .then(variable => [variable]);\n    }\n}\n\nexport function isIndexedPropName(name: string): boolean {\n    return !!name.match(/^\\d+$/);\n}\n\nconst PREVIEW_PROPS_DEFAULT = 3;\nconst PREVIEW_PROPS_CONSOLE = 8;\nconst PREVIEW_PROP_LENGTH = 50;\nconst ELLIPSIS = '…';\nfunction getArrayPreview(object: Crdp.Runtime.RemoteObject, context?: string): string {\n    let value = object.description;\n    if (object.preview) {\n        const numProps = context === 'repl' ? PREVIEW_PROPS_CONSOLE : PREVIEW_PROPS_DEFAULT;\n        const indexedProps = object.preview.properties\n            .filter(prop => isIndexedPropName(prop.name));\n\n        // Take the first 3 props, and parse the indexes\n        const propsWithIdx = indexedProps.slice(0, numProps)\n            .map((prop, i) => {\n                return {\n                    idx: parseInt(prop.name, 10),\n                    value: propertyPreviewToString(prop)\n                };\n            });\n\n        // Insert ... where there are undefined indexes\n        const propValues: string[] = [];\n        for (let i = 0; i < propsWithIdx.length; i++) {\n            const prop = propsWithIdx[i];\n\n            const prevIdx = i === 0 ? -1 : propsWithIdx[i - 1].idx;\n            if (prop.idx > prevIdx + 1) {\n                propValues.push(ELLIPSIS);\n            }\n\n            propValues.push(prop.value);\n        }\n\n        let propsPreview = propValues.join(', ');\n        if (object.preview.overflow || indexedProps.length > numProps) {\n            propsPreview += ', ' + ELLIPSIS;\n        }\n\n        value += ` [${propsPreview}]`;\n    }\n\n    return value;\n}\n\nfunction getObjectPreview(object: Crdp.Runtime.RemoteObject, context?: string): string {\n    let value = object.description;\n    if (object.preview) {\n        const numProps = context === 'repl' ? PREVIEW_PROPS_CONSOLE : PREVIEW_PROPS_DEFAULT;\n        const props = object.preview.properties.slice(0, numProps);\n        let propsPreview = props\n            .map(prop => {\n                const name = prop.name || `\"\"`;\n                return `${name}: ${propertyPreviewToString(prop)}`;\n            })\n            .join(', ');\n\n        if (object.preview.overflow || object.preview.properties.length > numProps) {\n            propsPreview += ', …';\n        }\n\n        value += ` {${propsPreview}}`;\n    }\n\n    return value;\n}\n\nfunction propertyPreviewToString(prop: Crdp.Runtime.PropertyPreview): string {\n    const value = typeof prop.value === 'undefined' ?\n        `<${prop.type}>` :\n        trimProperty(prop.value);\n\n    return prop.type === 'string' ?\n        `\"${value}\"` :\n        value;\n}\n\nfunction trimProperty(value: string): string {\n    return (value !== undefined && value !== null && value.length > PREVIEW_PROP_LENGTH) ?\n        value.substr(0, PREVIEW_PROP_LENGTH) + ELLIPSIS :\n        value;\n}\n\nexport function getRemoteObjectPreview(object: Crdp.Runtime.RemoteObject, stringify = true, context?: string): string {\n    if (object) {\n        if (object.type === 'object') {\n            return getRemoteObjectPreview_object(object, context);\n        } else if (object.type === 'function') {\n            return getRemoteObjectPreview_function(object, context);\n        } else {\n            return getRemoteObjectPreview_primitive(object, stringify);\n        }\n    }\n\n    return '';\n}\n\nexport function getRemoteObjectPreview_object(object: Crdp.Runtime.RemoteObject, context?: string): string {\n    const objectDescription = object.description || '';\n    if ((<string>object.subtype) === 'internal#location') {\n        // Could format this nicely later, see #110\n        return 'internal#location';\n    } else if (object.subtype === 'null') {\n        return 'null';\n    } else if (object.subtype === 'array' || object.subtype === 'typedarray') {\n        return getArrayPreview(object, context);\n    } else if (object.subtype === 'error') {\n        // The Error's description contains the whole stack which is not a nice description.\n        // Up to the first newline is just the error name/message.\n        const firstNewlineIdx = objectDescription.indexOf('\\n');\n        return firstNewlineIdx >= 0 ?\n            objectDescription.substr(0, firstNewlineIdx) :\n            objectDescription;\n    } else if (object.subtype === 'promise' && object.preview) {\n        const promiseStatus = object.preview.properties.filter(prop => prop.name === '[[PromiseStatus]]')[0];\n        return promiseStatus ?\n            objectDescription + ' { ' + promiseStatus.value + ' }' :\n            objectDescription;\n    } else if (object.subtype === 'generator' && object.preview) {\n        const generatorStatus = object.preview.properties.filter(prop => prop.name === '[[GeneratorStatus]]')[0];\n        return generatorStatus ?\n            objectDescription + ' { ' + generatorStatus.value + ' }' :\n            objectDescription;\n    } else if (object.type === 'object' && object.preview) {\n        return getObjectPreview(object, context);\n    } else {\n        return objectDescription;\n    }\n}\n\nexport function getRemoteObjectPreview_primitive(object: Crdp.Runtime.RemoteObject, stringify?: boolean): string {\n    // The value is a primitive value, or something that has a description (not object, primitive, or undefined). And force to be string\n    if (typeof object.value === 'undefined') {\n        return object.description + '';\n    } else if (object.type === 'number') {\n        // .value is truncated, so use .description, the full string representation\n        // Should be like '3' or 'Infinity'.\n        return object.description || '' + object.value;\n    } else if (object.type === 'boolean') {\n        // Never stringified\n        return '' + object.value;\n    } else {\n        return stringify ? `\"${object.value}\"` : object.value;\n    }\n}\n\nexport function getRemoteObjectPreview_function(object: Crdp.Runtime.RemoteObject, context?: string): string {\n    const firstBraceIdx = object.description.indexOf('{');\n    if (firstBraceIdx >= 0) {\n        return object.description.substring(0, firstBraceIdx) + '{ … }';\n    } else {\n        const firstArrowIdx = object.description.indexOf('=>');\n        return firstArrowIdx >= 0 ?\n            object.description.substring(0, firstArrowIdx + 2) + ' …' :\n            object.description;\n    }\n}\n\nexport class VariableHandles {\n    private _variableHandles = new Handles<IVariableContainer>(1);\n    private _consoleVariableHandles = new Handles<IVariableContainer>(1e5);\n\n    public onPaused(): void {\n        // Only reset the variableHandles, the console vars are still visible\n        this._variableHandles.reset();\n    }\n\n    public create(value: IVariableContainer, context: VariableContext = 'variables'): number {\n        return this.getHandles(context).create(value);\n    }\n\n    public get(handle: number): IVariableContainer {\n        return this._variableHandles.get(handle) || this._consoleVariableHandles.get(handle);\n    }\n\n    private getHandles(context: VariableContext): Handles<IVariableContainer> {\n        return context === 'repl' ?\n            this._consoleVariableHandles :\n            this._variableHandles;\n    }\n}\n\nexport interface IPropCount {\n    indexedVariables: number;\n    namedVariables: number;\n}\n\nexport function getCollectionNumPropsByPreview(object: Crdp.Runtime.RemoteObject): IPropCount {\n    let indexedVariables = 0;\n    let namedVariables = object.preview.properties.length + 1; // +1 for [[Entries]];\n\n    return { indexedVariables, namedVariables };\n}\n\nexport function getArrayNumPropsByPreview(object: Crdp.Runtime.RemoteObject): IPropCount {\n    let indexedVariables = 0;\n    const indexedProps = object.preview.properties\n        .filter(prop => isIndexedPropName(prop.name));\n    if (indexedProps.length) {\n        // +1 because (last index=0) => 1 prop\n        indexedVariables = parseInt(indexedProps[indexedProps.length - 1].name, 10) + 1;\n    }\n\n    const namedVariables = object.preview.properties.length - indexedProps.length + 2; // 2 for __proto__ and length\n    return { indexedVariables, namedVariables };\n}\n\nexport function createPrimitiveVariableWithValue(name: string, value: string, parentEvaluateName?: string): DebugProtocol.Variable {\n    return {\n        name,\n        value,\n        variablesReference: 0,\n        evaluateName: ChromeUtils.getEvaluateName(parentEvaluateName, name)\n    };\n}\n\nexport function createPropertyContainer(object: Crdp.Runtime.RemoteObject, evaluateName: string): IVariableContainer {\n    return new PropertyContainer(object.objectId, evaluateName);\n}\n\nexport function createPrimitiveVariable(name: string, object: Crdp.Runtime.RemoteObject, parentEvaluateName?: string, stringify?: boolean): DebugProtocol.Variable {\n    const value = getRemoteObjectPreview_primitive(object, stringify);\n    const variable = createPrimitiveVariableWithValue(name, value, parentEvaluateName);\n    variable.type = object.type;\n\n    return variable;\n}\n\nexport function createFunctionVariable(name: string,\n                                object: Crdp.Runtime.RemoteObject,\n                                context: VariableContext,\n                                handles: VariableHandles,\n                                parentEvaluateName?: string): DebugProtocol.Variable {\n\n    let value: string;\n\n    if (object.description) {\n        const firstBraceIdx = object.description.indexOf('{');\n        if (firstBraceIdx >= 0) {\n            value = object.description.substring(0, firstBraceIdx) + '{ … }';\n        } else {\n            const firstArrowIdx = object.description.indexOf('=>');\n            value = firstArrowIdx >= 0 ?\n                object.description.substring(0, firstArrowIdx + 2) + ' …' :\n                object.description;\n        }\n    } else {\n        value = 'function() { … }';\n    }\n\n    const evaluateName = ChromeUtils.getEvaluateName(parentEvaluateName, name);\n    return <DebugProtocol.Variable>{\n        name,\n        value,\n        type: utils.uppercaseFirstLetter(object.type),\n        variablesReference: handles.create(new PropertyContainer(object.objectId, evaluateName), context),\n        evaluateName\n    };\n}"],"sourceRoot":"../.."}