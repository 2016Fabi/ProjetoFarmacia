{"version":3,"sources":["../src/chrome/scriptSkipping.ts"],"names":[],"mappings":"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","file":"scriptSkipping.js","sourcesContent":["/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n\nimport { logger } from 'vscode-debugadapter';\nimport { IToggleSkipFileStatusArgs } from '../debugAdapterInterfaces';\nimport { ChromeConnection } from './chromeConnection';\nimport { Protocol as Crdp } from 'devtools-protocol';\nimport { ScriptContainer } from './scripts';\nimport { Transformers } from './chromeDebugAdapter';\nimport * as utils from '../utils';\n\nexport class ScriptSkipper {\n\n    private _skipFileStatuses = new Map<string, boolean>();\n    private _blackboxedRegexes: RegExp[] = [];\n\n    private get chrome() { return this._chromeConnection.api; }\n    constructor(private readonly _chromeConnection: ChromeConnection, private readonly _transformers: Transformers) {}\n\n    public init(skipFiles, skipFileRegExps) {\n        let patterns: string[] = [];\n\n        if (skipFiles) {\n            const skipFilesArgs = skipFiles.filter(glob => {\n                if (glob.startsWith('!')) {\n                    logger.warn(`Warning: skipFiles entries starting with '!' aren't supported and will be ignored. (\"${glob}\")`);\n                    return false;\n                }\n\n                return true;\n            });\n\n            patterns = skipFilesArgs.map(glob => utils.pathGlobToBlackboxedRegex(glob));\n        }\n\n        if (skipFileRegExps) {\n            patterns = patterns.concat(skipFileRegExps);\n        }\n\n        if (patterns.length) {\n            this._blackboxedRegexes = patterns.map(pattern => new RegExp(pattern, 'i'));\n            this.refreshBlackboxPatterns();\n        }\n    }\n\n    public async toggleSkipFileStatus(args: IToggleSkipFileStatusArgs,\n                                      scripts: ScriptContainer,\n                                      transformers: Transformers) {\n\n        // e.g. strip <node_internals>/\n        if (args.path) {\n            args.path = scripts.displayPathToRealPath(args.path);\n        }\n\n        const aPath = args.path || scripts.fakeUrlForSourceReference(args.sourceReference);\n        const generatedPath = await transformers.sourceMapTransformer.getGeneratedPathFromAuthoredPath(aPath);\n        if (!generatedPath) {\n            logger.log(`Can't toggle the skipFile status for: ${aPath} - haven't seen it yet.`);\n            return;\n        }\n\n        const sources = await transformers.sourceMapTransformer.allSources(generatedPath);\n        if (generatedPath === aPath && sources.length) {\n            // Ignore toggling skip status for generated scripts with sources\n            logger.log(`Can't toggle skipFile status for ${aPath} - it's a script with a sourcemap`);\n            return;\n        }\n\n        const newStatus = !this.shouldSkipSource(aPath);\n        logger.log(`Setting the skip file status for: ${aPath} to ${newStatus}`);\n        this._skipFileStatuses.set(aPath, newStatus);\n\n        const targetPath = transformers.pathTransformer.getTargetPathFromClientPath(generatedPath) || generatedPath;\n        const script = scripts.getScriptByUrl(targetPath);\n\n        await this.resolveSkipFiles(script, generatedPath, sources, /*toggling=*/true);\n\n        if (newStatus) {\n            this.makeRegexesSkip(script.url);\n        } else {\n            this.makeRegexesNotSkip(script.url);\n        }\n    }\n\n    public async resolveSkipFiles(script: Crdp.Debugger.ScriptParsedEvent, mappedUrl: string, sources: string[], toggling?: boolean): Promise<void> {\n        if (sources && sources.length) {\n            const parentIsSkipped = this.shouldSkipSource(script.url);\n            const libPositions: Crdp.Debugger.ScriptPosition[] = [];\n\n            // Figure out skip/noskip transitions within script\n            let inLibRange = parentIsSkipped;\n            for (let s of sources) {\n                let isSkippedFile = this.shouldSkipSource(s);\n                if (typeof isSkippedFile !== 'boolean') {\n                    // Inherit the parent's status\n                    isSkippedFile = parentIsSkipped;\n                }\n\n                this._skipFileStatuses.set(s, isSkippedFile);\n\n                if ((isSkippedFile && !inLibRange) || (!isSkippedFile && inLibRange)) {\n                    const details = await this._transformers.sourceMapTransformer.allSourcePathDetails(mappedUrl);\n                    const detail = details.find(d => d.inferredPath === s);\n                    if (detail.startPosition) {\n                        libPositions.push({\n                            lineNumber: detail.startPosition.line,\n                            columnNumber: detail.startPosition.column\n                        });\n                    }\n\n                    inLibRange = !inLibRange;\n                }\n            }\n\n            // If there's any change from the default, set proper blackboxed ranges\n            if (libPositions.length || toggling) {\n                if (parentIsSkipped) {\n                    libPositions.splice(0, 0, { lineNumber: 0, columnNumber: 0});\n                }\n\n                if (libPositions[0].lineNumber !== 0 || libPositions[0].columnNumber !== 0) {\n                    // The list of blackboxed ranges must start with 0,0 for some reason.\n                    // https://github.com/Microsoft/vscode-chrome-debug/issues/667\n                    libPositions[0] = {\n                        lineNumber: 0,\n                        columnNumber: 0\n                    };\n                }\n\n                await this.chrome.Debugger.setBlackboxedRanges({\n                    scriptId: script.scriptId,\n                    positions: []\n                }).catch(() => this.warnNoSkipFiles());\n\n                if (libPositions.length) {\n                    this.chrome.Debugger.setBlackboxedRanges({\n                        scriptId: script.scriptId,\n                        positions: libPositions\n                    }).catch(() => this.warnNoSkipFiles());\n                }\n            }\n        } else {\n            const status = await this.getSkipStatus(mappedUrl);\n            const skippedByPattern = this.matchesSkipFilesPatterns(mappedUrl);\n            if (typeof status === 'boolean' && status !== skippedByPattern) {\n                const positions = status ? [{ lineNumber: 0, columnNumber: 0 }] : [];\n                this.chrome.Debugger.setBlackboxedRanges({\n                    scriptId: script.scriptId,\n                    positions\n                }).catch(() => this.warnNoSkipFiles());\n            }\n        }\n    }\n\n    private makeRegexesNotSkip(noSkipPath: string): void {\n        let somethingChanged = false;\n        this._blackboxedRegexes = this._blackboxedRegexes.map(regex => {\n            const result = utils.makeRegexNotMatchPath(regex, noSkipPath);\n            somethingChanged = somethingChanged || (result !== regex);\n            return result;\n        });\n\n        if (somethingChanged) {\n            this.refreshBlackboxPatterns();\n        }\n    }\n\n    private makeRegexesSkip(skipPath: string): void {\n        let somethingChanged = false;\n        this._blackboxedRegexes = this._blackboxedRegexes.map(regex => {\n            const result = utils.makeRegexMatchPath(regex, skipPath);\n            somethingChanged = somethingChanged || (result !== regex);\n            return result;\n        });\n\n        if (!somethingChanged) {\n            this._blackboxedRegexes.push(new RegExp(utils.pathToRegex(skipPath), 'i'));\n        }\n\n        this.refreshBlackboxPatterns();\n    }\n\n    private refreshBlackboxPatterns(): void {\n        this.chrome.Debugger.setBlackboxPatterns({\n            patterns: this._blackboxedRegexes.map(regex => regex.source)\n        }).catch(() => this.warnNoSkipFiles());\n    }\n\n    /**\n     * If the source has a saved skip status, return that, whether true or false.\n     * If not, check it against the patterns list.\n     */\n    public shouldSkipSource(sourcePath: string): boolean|undefined {\n        const status = this.getSkipStatus(sourcePath);\n        if (typeof status === 'boolean') {\n            return status;\n        }\n\n        if (this.matchesSkipFilesPatterns(sourcePath)) {\n            return true;\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Returns true if this path matches one of the static skip patterns\n     */\n    private matchesSkipFilesPatterns(sourcePath: string): boolean {\n        return this._blackboxedRegexes.some(regex => {\n            return regex.test(sourcePath);\n        });\n    }\n\n    /**\n     * Returns the current skip status for this path, which is either an authored or generated script.\n     */\n    private getSkipStatus(sourcePath: string): boolean|undefined {\n        if (this._skipFileStatuses.has(sourcePath)) {\n            return this._skipFileStatuses.get(sourcePath);\n        }\n\n        return undefined;\n    }\n\n    private warnNoSkipFiles(): void {\n        logger.log('Warning: this runtime does not support skipFiles');\n    }\n}"],"sourceRoot":"../.."}